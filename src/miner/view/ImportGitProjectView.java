/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miner.view;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.JOptionPane;
import miner.control.ImportGitProjectControl;
import miner.model.service.Observer;
import miner.util.exception.ValidationException;

/**
 *
 * @author carloseduardoxp
 */
public class ImportGitProjectView extends javax.swing.JInternalFrame implements Observer, ActionListener {

    private final ImportGitProjectControl control;

    private Integer percentFinished;
    
    private String message;

    Timer timer;    
    /**
     * Creates new form RepositorioGitView
     */
    public ImportGitProjectView() {
        control = new ImportGitProjectControl();
        initComponents();
        lblMsg.setText("");
    }

    public ImportGitProjectControl getControl() {
        return control;
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        prbImport.setValue(percentFinished);
        lblMsg.setText((message==null?"":message)+" "+percentFinished+"%");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        tbpProject = new javax.swing.JTabbedPane();
        pnlNew = new javax.swing.JPanel();
        lblUrl = new javax.swing.JLabel();
        btnImport = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblLocalPath = new javax.swing.JLabel();
        txtUrl = new javax.swing.JTextField();
        chkDropBranch = new javax.swing.JCheckBox();
        chkImportOnlyMasterBranch = new javax.swing.JCheckBox();
        txtLocalPath = new javax.swing.JTextField();
        prbImport = new javax.swing.JProgressBar();
        lblMsg = new javax.swing.JLabel();
        pnlProjects = new javax.swing.JPanel();
        scrRepositorios = new javax.swing.JScrollPane();
        tblRepositorios = new javax.swing.JTable();

        setClosable(true);
        setTitle("Import Git Project");

        pnlNew.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlNew.setPreferredSize(new java.awt.Dimension(710, 388));

        lblUrl.setText("Url:");

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        lblMessage.setText("To work, you must run in Linux and have installed git. In Ubuntu, try:  sudo apt-get install git");

        lblName.setText("Name:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.project.name}"), txtName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        lblLocalPath.setText("Local Path:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.project.url}"), txtUrl, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        chkDropBranch.setText("Delete local files and download again from GitHub");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.downloadAgain}"), chkDropBranch, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        chkImportOnlyMasterBranch.setText("Import only master branch");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.importOnlyMasterBranch}"), chkImportOnlyMasterBranch, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        txtLocalPath.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.project.localPathDownload}"), txtLocalPath, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lblMsg.setText("jLabel1");

        javax.swing.GroupLayout pnlNewLayout = new javax.swing.GroupLayout(pnlNew);
        pnlNew.setLayout(pnlNewLayout);
        pnlNewLayout.setHorizontalGroup(
            pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlNewLayout.createSequentialGroup()
                        .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNewLayout.createSequentialGroup()
                                .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName)
                                    .addComponent(lblUrl))
                                .addGap(42, 42, 42))
                            .addGroup(pnlNewLayout.createSequentialGroup()
                                .addComponent(lblLocalPath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUrl, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addComponent(txtName)
                            .addComponent(txtLocalPath)))
                    .addComponent(chkDropBranch)
                    .addComponent(chkImportOnlyMasterBranch)
                    .addComponent(btnImport)
                    .addComponent(lblMessage)
                    .addComponent(prbImport, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnlNewLayout.setVerticalGroup(
            pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUrl)
                    .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocalPath)
                    .addComponent(txtLocalPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkDropBranch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkImportOnlyMasterBranch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMessage)
                .addGap(15, 15, 15)
                .addComponent(lblMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prbImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189))
        );

        tbpProject.addTab("New Project", pnlNew);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${control.projects}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblRepositorios);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${code}"));
        columnBinding.setColumnName("Code");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${url}"));
        columnBinding.setColumnName("Url");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${localPath}"));
        columnBinding.setColumnName("Local Path");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        scrRepositorios.setViewportView(tblRepositorios);
        if (tblRepositorios.getColumnModel().getColumnCount() > 0) {
            tblRepositorios.getColumnModel().getColumn(0).setMinWidth(50);
            tblRepositorios.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblRepositorios.getColumnModel().getColumn(0).setMaxWidth(50);
            tblRepositorios.getColumnModel().getColumn(1).setMinWidth(130);
            tblRepositorios.getColumnModel().getColumn(1).setPreferredWidth(130);
            tblRepositorios.getColumnModel().getColumn(1).setMaxWidth(130);
        }

        javax.swing.GroupLayout pnlProjectsLayout = new javax.swing.GroupLayout(pnlProjects);
        pnlProjects.setLayout(pnlProjectsLayout);
        pnlProjectsLayout.setHorizontalGroup(
            pnlProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrRepositorios, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
        );
        pnlProjectsLayout.setVerticalGroup(
            pnlProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProjectsLayout.createSequentialGroup()
                .addComponent(scrRepositorios, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tbpProject.addTab("Imported Projects", pnlProjects);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpProject, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbpProject, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        control.updateLocalPath();
    }//GEN-LAST:event_txtNameFocusLost

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        percentFinished = 0;

        if (this.timer == null) {
            this.timer = new Timer(50, this);
        }

        if (!this.timer.isRunning()) {
            new Thread(new Runnable() {

                public void run() {
                    btnImport.setEnabled(false);
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    prbImport.setValue(0);
                    ImportGitProjectView view = ImportGitProjectView.this;
                    timer.start();
                    try {
                        long tempoInicial = System.currentTimeMillis();
                        control.importProject(view);
                        JOptionPane.showMessageDialog(view,
                                 "Finished in " + ((System.currentTimeMillis() - tempoInicial) / 1000) + " seconds",
                                "Import Project",
                                JOptionPane.INFORMATION_MESSAGE);
                    } catch (ValidationException e) {
                        JOptionPane.showMessageDialog(view,
                                "Validation Fault: " + e.getMessage(),
                                "Field Validation",
                                JOptionPane.WARNING_MESSAGE);
                        e.printStackTrace();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(view,
                                "System error: " + e.getMessage(),
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                    timer.stop();
                    btnImport.setEnabled(true);
                    setCursor(null);
                }
            }).start();
        }
    }//GEN-LAST:event_btnImportActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JCheckBox chkDropBranch;
    private javax.swing.JCheckBox chkImportOnlyMasterBranch;
    private javax.swing.JLabel lblLocalPath;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUrl;
    private javax.swing.JPanel pnlNew;
    private javax.swing.JPanel pnlProjects;
    private javax.swing.JProgressBar prbImport;
    private javax.swing.JScrollPane scrRepositorios;
    private javax.swing.JTable tblRepositorios;
    private javax.swing.JTabbedPane tbpProject;
    private javax.swing.JTextField txtLocalPath;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUrl;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void sendStatusMessage(String message) {
        this.message = message;
    }

    @Override
    public void sendCurrentPercent(Integer percent) {
        this.percentFinished = percent;
    }

}
