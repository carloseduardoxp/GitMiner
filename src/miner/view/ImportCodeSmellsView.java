/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miner.view;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import miner.control.ImportSmellControl;
import miner.model.service.Observer;
import miner.util.exception.ValidationException;

/**
 *
 * @author carloseduardoxp
 */
public class ImportCodeSmellsView extends javax.swing.JInternalFrame implements Observer, ActionListener {

    private ImportSmellControl control;

    private Integer percentFinished;

    private String message;

    Timer timer;

    /**
     * Creates new form PopulaSmellView
     */
    public ImportCodeSmellsView() {
        control = new ImportSmellControl();
        initComponents();
        lblMsg.setText("");
    }

    public ImportSmellControl getControl() {
        return control;
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        prbImport.setValue(percentFinished);
        lblMsg.setText((message==null?"":message)+" "+percentFinished+"%");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        pnlFields = new javax.swing.JPanel();
        lblProject = new javax.swing.JLabel();
        cmbProject = new javax.swing.JComboBox<>();
        scrSmells = new javax.swing.JScrollPane();
        lstSmells = new javax.swing.JList<>();
        lblSmells = new javax.swing.JLabel();
        btnImport = new javax.swing.JButton();
        prbImport = new javax.swing.JProgressBar();
        lblMsg = new javax.swing.JLabel();
        cmbAllCodeSmells = new javax.swing.JCheckBox();
        scrMetrics = new javax.swing.JScrollPane();
        lstMetrics = new javax.swing.JList<>();
        lblMetrics = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setClosable(true);
        setTitle("Import Code Smells & Metrics");

        pnlFields.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblProject.setText("Project:");

        cmbProject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${control.projects}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cmbProject);
        bindingGroup.addBinding(jComboBoxBinding);
        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.selectedProject}"), cmbProject, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${control.smells}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, lstSmells);
        bindingGroup.addBinding(jListBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.selectedSmells}"), lstSmells, org.jdesktop.beansbinding.BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        scrSmells.setViewportView(lstSmells);

        lblSmells.setText("Smells:");

        btnImport.setText("Import Smells & Metrics");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        lblMsg.setText("jLabel2");

        cmbAllCodeSmells.setText("All Code Smels");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${control.allCodeSmells}"), cmbAllCodeSmells, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        lstMetrics.setFixedCellWidth(200);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${control.metrics}");
        jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, lstMetrics);
        bindingGroup.addBinding(jListBinding);

        scrMetrics.setViewportView(lstMetrics);

        lblMetrics.setText("Metrics:");

        javax.swing.GroupLayout pnlFieldsLayout = new javax.swing.GroupLayout(pnlFields);
        pnlFields.setLayout(pnlFieldsLayout);
        pnlFieldsLayout.setHorizontalGroup(
            pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prbImport, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlFieldsLayout.createSequentialGroup()
                        .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFieldsLayout.createSequentialGroup()
                                .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProject)
                                    .addComponent(lblSmells)
                                    .addComponent(lblMetrics, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(scrMetrics, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cmbProject, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(scrSmells, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))))
                            .addComponent(btnImport)
                            .addComponent(cmbAllCodeSmells))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlFieldsLayout.setVerticalGroup(
            pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProject)
                    .addComponent(cmbProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSmells)
                    .addComponent(scrSmells, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAllCodeSmells)
                .addGroup(pnlFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFieldsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMetrics)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFieldsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scrMetrics, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addComponent(btnImport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prbImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        percentFinished = 0;

        if (this.timer == null) {
            this.timer = new Timer(50, this);
        }

        if (!this.timer.isRunning()) {
            new Thread(new Runnable() {

                public void run() {
                    btnImport.setEnabled(false);
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    prbImport.setValue(0);
                    ImportCodeSmellsView view = ImportCodeSmellsView.this;
                    timer.start();
                    try {
                        long tempoInicial = System.currentTimeMillis();
                        control.importCodesmells(view);
                        JOptionPane.showMessageDialog(view,
                            "Finished in " + ((System.currentTimeMillis() - tempoInicial) / 1000) + " seconds",
                            "Import Classes",
                            JOptionPane.INFORMATION_MESSAGE);
                    } catch (ValidationException e) {
                        JOptionPane.showMessageDialog(view,
                            "Validation Fault: " + e.getMessage(),
                            "Field Validation",
                            JOptionPane.WARNING_MESSAGE);
                        e.printStackTrace();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(view,
                            "System error: " + e.getMessage(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                    }
                    timer.stop();
                    btnImport.setEnabled(true);
                    setCursor(null);
                }
            }).start();
        }
    }//GEN-LAST:event_btnImportActionPerformed


    @Override
    public void sendStatusMessage(String message) {
        this.message = message;
    }

    @Override
    public void sendCurrentPercent(Integer percent) {
        this.percentFinished = percent;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JCheckBox cmbAllCodeSmells;
    private javax.swing.JComboBox<String> cmbProject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblMetrics;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblProject;
    private javax.swing.JLabel lblSmells;
    private javax.swing.JList<String> lstMetrics;
    private javax.swing.JList<String> lstSmells;
    private javax.swing.JPanel pnlFields;
    private javax.swing.JProgressBar prbImport;
    private javax.swing.JScrollPane scrMetrics;
    private javax.swing.JScrollPane scrSmells;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
